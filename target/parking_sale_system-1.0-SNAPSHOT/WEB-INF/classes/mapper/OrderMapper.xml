<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.OrderMapper">
    <insert id="insertOrder" parameterType="com.bean.Order">
        insert into `order` values (#{orderId},#{parkingSpaceId},#{contractSignatory},#{contractInitiator},#{contractContent},#{orderTime},#{paymentMethod},#{finalPrice},#{deposit},#{purchaseMethod},#{state},#{finalPaymentTime})
    </insert>

    <select id="selectOrder" parameterType="java.util.Map" resultType="com.bean.Order">
        select `order`.* from `order`,`parking_space`,`residential_quarters`
    <where>
        `order`.parking_space_id=`parking_space`.id and
        `parking_space`.residential_quarters_id = `residential_quarters`.id and
        `residential_quarters`.developer_id=#{did}
        <if test="search != null and search !=''">
            and `order`.`state` like concat('%', #{search}, '%')
            or `order`.`order_time` like concat('%', #{search}, '%')
            or `order`.`order_id` = #{search}
        </if>
    </where>
    LIMIT ${(pageNum-1)*pageSize},${pageSize*pageNum};
    </select>

    <update id="updateOrder" parameterType="com.bean.Order">
        update `order` set contract_initiator=#{contractInitiator}, contract_content=#{contractContent},
                           final_price=#{finalPrice},state=#{state},
                           final_payment_time=#{finalPaymentTime}
        where order_id = #{orderId}
    </update>

    <update id="updateOrderState">
        update `order` set state=#{state} where order_id=#{orderId}
    </update>

    <select id="selectOrderById" resultType="com.bean.Order">
        select * from `order` where order_id=#{orderId}
    </select>

    <select id="selectAllOrderByDid" resultType="com.bean.Order">
        select * from `order`,`parking_space`,`residential_quarters`
        <where>
            `order`.parking_space_id=`parking_space`.id and
            `parking_space`.residential_quarters_id = `residential_quarters`.id and
            `residential_quarters`.developer_id=#{did}
        </where>
    </select>

    <select id="selectStatisticOrder" resultType="com.bean.OrderStatistic">
        select d.date, IFNULL(T.count,0) count from
        (select date_add(CURDATE()-7,interval @i:=@i+1 day) as date
        from (
        select 1
        union all select 1
        union all select 1
        union all select 1
        union all select 1
        union all select 1
        union all select 1
        ) as tmp,
        (select @i:= -1) t
        ) d
        LEFT JOIN(
        SELECT count(order_id) as count,cast(order_time as date) ride_time  FROM `order`,`parking_space`,`residential_quarters`
         WHERE DATEDIFF(SYSDATE()-1,order_time) &lt; 7 and
            `order`.parking_space_id=`parking_space`.id and
            `parking_space`.residential_quarters_id = `residential_quarters`.id and
            `residential_quarters`.developer_id=#{did} and `order`.state = #{state}
         GROUP BY cast(order_time as date)
        )	T on T.ride_time = d.date
    </select>

    <select id="selectUserOrder" resultType="com.bean.Order" parameterType="java.util.Map">
        select * from `order` where contract_signatory = #{userIdentity}
    </select>
</mapper>